name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🔍 Run linting
      run: npm run lint || echo "Linting not configured - skipping"
      
    - name: 🧪 Run tests
      run: npm test
      env:
        NODE_ENV: test
        
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          test-results.xml
        retention-days: 7

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🔒 Run security audit
      run: npm audit --audit-level=moderate

  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci --production
      
    - name: 🏗️ Create build artifact
      run: |
        mkdir -p build
        tar --exclude='./build' --exclude='./.git' --exclude='./.github' --exclude='./tests' --exclude='./docs' --exclude='./node_modules' -cf - . | tar -xf - -C build/
        cd build
        npm ci --production --silent
        
    - name: 📤 Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: build/
        retention-days: 7

  deploy:
    name: 🚀 Deploy to Railway
    runs-on: ubuntu-latest
    needs: [test, security, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 🚂 Install Railway CLI
      run: npm install -g @railway/cli
      
    - name: 🚂 Deploy to Railway
      run: |
        railway link --service=${{ secrets.RAILWAY_SERVICE_ID }} --project_id=${{ secrets.RAILWAY_PROJECT_ID }} --environment=${{ secrets.RAILWAY_ENVIRONMENT_ID }}
        railway redeploy --yes
      env:
        RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
        
    - name: 🏥 Health Check
      run: |
        echo "Waiting for deployment to be ready..."
        sleep 30
        
        # Health check with retry logic
        for i in {1..10}; do
          if curl -f -s "${{ secrets.RAILWAY_URL }}/health"; then
            echo "✅ Health check passed!"
            break
          else
            echo "❌ Health check failed, retrying in 10s... ($i/10)"
            sleep 10
          fi
          
          if [ $i -eq 10 ]; then
            echo "💥 Health check failed after 10 attempts"
            exit 1
          fi
        done

  notify:
    name: 📢 Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📢 Notify Success
      if: needs.deploy.result == 'success'
      run: |
        echo "🎉 Deployment successful!"
        echo "🔗 App URL: ${{ secrets.RAILWAY_URL }}"
        
    - name: 📢 Notify Failure
      if: needs.deploy.result == 'failure'
      run: |
        echo "💥 Deployment failed!"
        echo "Please check the logs for more information." 